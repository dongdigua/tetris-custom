From 4bb8a0ad2698da536186a6ea820e3f4645fd2a26 Mon Sep 17 00:00:00 2001
From: dongdigua <dongdigua@outlook.com>
Date: Sun, 12 Feb 2023 17:55:47 +0800
Subject: [PATCH] add reverse rotate :)

---
 tetris.c | 27 +++++++++++++++++----------
 1 file changed, 17 insertions(+), 10 deletions(-)

diff --git a/tetris.c b/tetris.c
index 59b6173..84352f5 100644
--- a/tetris.c
+++ b/tetris.c
@@ -53,7 +53,7 @@
 #include "screen.h"
 #include "tetris.h"
 
-#define NUMKEYS 6
+#define NUMKEYS 7
 
 cell	board[B_SIZE];
 int	Rows, Cols;
@@ -170,7 +170,7 @@ main(int argc, char *argv[])
 	if (pledge("stdio rpath wpath cpath tty unveil", NULL) == -1)
 		err(1, "pledge");
 
-	keys = "jkl pq";
+	keys = "hjkl pq";
 
 	classic = showpreview = 0;
 	while ((ch = getopt(argc, argv, "ck:l:ps")) != -1)
@@ -226,9 +226,9 @@ main(int argc, char *argv[])
 	}
 
 	snprintf(key_msg, sizeof key_msg,
-"%s - left   %s - rotate   %s - right   %s - drop   %s - pause   %s - quit",
+"%s - left   %s - ccw  %s - cw   %s - right   %s - drop   %s - pause   %s - quit",
 		key_write[0], key_write[1], key_write[2], key_write[3],
-		key_write[4], key_write[5]);
+		key_write[4], key_write[5], key_write[6]);
 
 	(void)signal(SIGINT, onintr);
 	scr_init();
@@ -286,11 +286,11 @@ main(int argc, char *argv[])
 		/*
 		 * Handle command keys.
 		 */
-		if (c == keys[5]) {
+		if (c == keys[6]) {
 			/* quit */
 			break;
 		}
-		if (c == keys[4]) {
+		if (c == keys[5]) {
 			static char msg[] =
 			    "paused - press RETURN to continue";
 
@@ -313,21 +313,28 @@ main(int argc, char *argv[])
 			continue;
 		}
 		if (c == keys[1]) {
-			/* turn */
-			const struct shape *new = &shapes[
-			    classic? curshape->rotc : curshape->rot];
+			/* turn ccw */
+			const struct shape *new = &shapes[curshape->rot];
 
 			if (fits_in(new, pos))
 				curshape = new;
 			continue;
 		}
 		if (c == keys[2]) {
+			/* turn cw */
+			const struct shape *new = &shapes[curshape->rotc];
+
+			if (fits_in(new, pos))
+				curshape = new;
+			continue;
+		}
+		if (c == keys[3]) {
 			/* move right */
 			if (fits_in(curshape, pos + 1))
 				pos++;
 			continue;
 		}
-		if (c == keys[3]) {
+		if (c == keys[4]) {
 			/* move to bottom */
 			while (fits_in(curshape, pos + B_COLS)) {
 				pos += B_COLS;

